APP_NAME := rust-demo-lambda-extension
TARGET := aarch64-unknown-linux-musl
RELEASE_DIR := target/$(TARGET)/release
ZIP_FILE := lambda-extension-$(shell date +%Y%m%d%H%M%S).zip
S3_BUCKET := lambda-extensions-rust

.PHONY: all install build package clean

all: install build package upload deploy clean

install:
	@which zig > /dev/null || (echo "ðŸ”§ Installing Zig..." && brew install zig)
	@which cargo-zigbuild > /dev/null || (echo "ðŸ”§ Installing cargo-zigbuild..." && cargo install cargo-zigbuild)
	@rustup target add $(TARGET)

build:
	@echo "ðŸš€ Compiling for $(TARGET)..."
	cargo zigbuild --release --target $(TARGET)
	@echo "âœ… Binary generated: $(RELEASE_DIR)/$(APP_NAME)"

package:
	@echo "ðŸ“¦ Packaging Lambda extension..."
	rm -rf extensions $(ZIP_FILE)
	mkdir -p extensions
	cp $(RELEASE_DIR)/$(APP_NAME) extensions/
	chmod +x extensions/$(APP_NAME)
	zip -r $(ZIP_FILE) extensions
	@echo "âœ… Package generated: $(ZIP_FILE)"

upload:
	@echo "ðŸ“¤ Uploading package to S3..."
	aws s3 cp $(ZIP_FILE) s3://$(S3_BUCKET)/$(ZIP_FILE)
	@echo "âœ… Package uploaded to S3"

deploy:
	@echo "ðŸ“¦ Deploying Lambda extension..."
	sam build
	sam deploy --parameter-overrides Bucket=$(S3_BUCKET) Key=$(ZIP_FILE)
	@echo "âœ… Lambda extension deployed"

clean:
	cargo clean
	rm -rf extensions $(ZIP_FILE)
	rm -rf .aws-sam
